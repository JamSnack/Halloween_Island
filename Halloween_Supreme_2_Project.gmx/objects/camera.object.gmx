<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>follow_this = obj_player;

audio_listener_set_orientation(0,0,0,1000,0,-1,0);

zoom = 1;
zoom_speed = 3;
x_zoom = 256/zoom;
y_zoom = 256/zoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if game_state == "GAMEPLAY" &amp;&amp; instance_exists(follow_this)
{
    x = approach(x,follow_this.x,1+(x/follow_this.x)*5);
    y = approach(y,follow_this.y,1+(y/follow_this.y)*5);
}
else if game_state == "INTERM" &amp;&amp; instance_exists(obj_maze_generator)
{
    var maze_size = obj_maze_generator.maze_size;
    var tile_size = obj_maze_generator.maze_size;
    var target = floor(maze_size/2)*tile_size;
    
    x = approach(x,target,1+(x/target)*5);
    y = approach(y,target,1+(y/target)*5);
}

view_xview = round(x-view_wview/2);
view_yview = round(y-view_hview/2);

//Zoom!
x_zoom = 256/zoom;
y_zoom = 256/zoom;

if (view_wview != x_zoom) || (view_hview != y_zoom)
{
    view_wview = approach(view_wview,x_zoom,(zoom_speed*view_wview/x_zoom)*zoom_speed);
    view_hview = approach(view_hview,y_zoom,(zoom_speed*view_hview/y_zoom)*zoom_speed);
}


//Set listener position.
audio_listener_set_position(0,x,y,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
