<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZE VARAIBLES - BATTLE SPECIFICATIONS HANDLED WITH scr_startBattle();
//FOR TASKA: The instantiation of this object begins a battle. Simply execute scr_startBattle();
//and pass in the proper parameters to begin the fight.

location = "GRASS"; //Current location for use in determining background and music.
background = noone; //Container for future background reference
battle_music = noone; //Music to use for the battle.

//ENEMY VARIABLES
enemy_id = noone; //List of enemy IDs. Noone if DNE. NOTE: Currently only 1 enemy ID is expected.
enemy_sprite = spr_battle_monster;
enemy_idle_offset = 8;
enemy_idle_wave = random(360); //Interpolates between 0 and 360.
reverse_idle = 0; //1 or 0. Determines whether or not to reverse the idle animation. See the approach line in step event. (ln. 2)
enemy_name = noone;
enemy_level = noone;
enemy_hp = noone;
enemy_max_hp = noone;

//GAME CONTROL VARIABLES
player_turn = true; //True = player turn, false = enemy turn.
chosen_action = noone; //Noone if no action is chosen; otherwise the name of the action.
battle_timer = 0; //A timer useful for keeping track of things during the battle.
action_selected = 0; //Keeps track of the action selected. 0=attack, 1=item, 2=run
battle_string = ""; //The text that is show during battle.
battle_string_max_length = 200; //The maximum length of the battle string.
battle_string_max_height = 40; //The maximum height of the battle stirng.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//-----------Animate the enemy---------
enemy_idle_wave = approach(enemy_idle_wave,360-(360*reverse_idle),0.1);

if enemy_idle_wave &gt;= 360
{
    reverse_idle = 1;
    enemy_idle_wave = 360;
}
else if enemy_idle_wave &lt;= 0
{
    reverse_idle = 0;
    enemy_idle_wave = 0;
}

//----------Game Brain!----------------
// game brain gaming gameing gamer
if player_turn == true
{
    if chosen_action != noone
    {
        //Execute the chosen action
        scr_executeAction(chosen_action);
        chosen_action = noone;
        player_turn = false;
        battle_timer = 0;
    }
    
    //Selection
    var key_left = (keyboard_check_released(vk_left) || keyboard_check_released(ord("A")));
    var key_right = (keyboard_check_released(vk_right) || keyboard_check_released(ord("D")));
    
    if key_left &amp;&amp; action_selected &gt; 0
    {
        action_selected -= 1;
    }
    else if key_right &amp;&amp; action_selected &lt; 2
    {
        action_selected += 1;
    }
}
else
{
    if battle_timer &gt; room_speed*1
    {
        //The enemy executes an attack!
        global.player_stats[STATS.hp] -= enemy_level;
        player_turn = true;
    }
}

//---Increment timer----
battle_timer += 1;

//-----format battle text------
if string_width(battle_string) &gt; battle_string_max_length
{
    battle_string = scr_fitText(battle_string,battle_string_max_length);
}

if string_height(battle_string) &gt; battle_string_max_height
{
    //We should remove text. Let's delete the first-most message.
    var new_str = "";
    
    for(_i=1;_i&lt;string_length(battle_string);_i++)
    {
        var char = string_char_at(battle_string,_i);
        new_str += char;
        
        if char == "#" 
            { show_debug_message(new_str); break; }
    }
    
    battle_string = string_delete(battle_string,1,string_length(new_str));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the battle
var wind_width = 256;
var wind_height = 224;
var wind_center_x = wind_width/2;
var wind_center_y = wind_height/2;

draw_set_font(global.fnt_normal);

//Draw the background
draw_background(bkg_battle_field,0,0);

//Draw action options
draw_set_colour(c_black);
draw_rectangle(0,wind_height-40,wind_width,wind_height,false);

draw_set_colour(c_white);
draw_text(5,wind_height-38,battle_string);

//Draw the enemy
var _enemy_offset = enemy_idle_offset*sin(enemy_idle_wave);

draw_sprite(spr_battle_monster,enemy_id,wind_center_x,wind_center_y+_enemy_offset);
draw_text(wind_center_x-40,wind_center_y-64+_enemy_offset,enemy_name+" Lv. "+string(enemy_level)+"#HP: "+string(enemy_hp)+"/"+string(enemy_max_hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEMPORARY: APPEND MESSAGES TO THE BATTLE STRING.
battle_string += choose("This is a test.#","Sphere Elite is looking ever so dashing!#","You are dealt 0913451. Death.#");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
